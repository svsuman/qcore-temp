const { getCurrentUser } = require('./currentUserSingleton.js')

const percipioSecretLoaderApiUrl = 'https://percipio-secret-loader-api.develop.squads-dev.com'
// const percipioSecretLoaderApiUrl = 'http://localhost:8080'

exports.secretManagerKeyFromHarness = async function (harnessKeyName) {
  const currentUser = await getCurrentUser() || {};

  const response = await fetch(`${percipioSecretLoaderApiUrl}/mappings/${harnessKeyName}`, {
    method: 'get',
    headers: {
      'Content-Type': 'application/json',
      'UserId': currentUser.UserId,
      'Account': currentUser.Account,
      'Arn': currentUser.Arn,
    },
  });

  if (response.status === 200) {
    const jsonResponse = await response.json();
    return jsonResponse.data &&
      jsonResponse.data &&
      jsonResponse.data.secretByName &&
      jsonResponse.data.secretByName.secretReference;
  }
  return null
}

exports.secretManagerKeysFromHarness = async function (harnessKeyNames, skipcache) {
  const result = {};
  const currentUser = await getCurrentUser() || {};

  const response = await fetch(`${percipioSecretLoaderApiUrl}/mappings/bulk?skipCache=${skipcache}`, {
    method: 'post',
    body: JSON.stringify({ keys: harnessKeyNames }),
    headers: {
      'Content-Type': 'application/json',
      'UserId': currentUser.UserId,
      'Account': currentUser.Account,
      'Arn': currentUser.Arn,
    },
  });

  if (response.status === 200) {
    const jsonResponse = await response.json();
    for (const key of Object.keys(jsonResponse.data)) {
      result[key] = jsonResponse.data[key] && jsonResponse.data[key].secretReference
    }
  }

  return result
}
